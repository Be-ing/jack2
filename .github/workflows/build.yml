name: build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1
  PAWPAW_VERSION: 8c69660ab10b75cd7a488f41386dbcb4c8802c5a

jobs:
  # macOS native intel build
  macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: macos-${PAWPAW_VERSION}
    - name: Set up dependencies
      run: |
        brew install cmake jq meson
    - name: Bootstrap macOS intel
      shell: bash
      run: |
        if [ ! -d PawPaw ]; then
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${PAWPAW_VERSION}
        fi
        ./PawPaw/bootstrap-jack2.sh macos && ./PawPaw/.cleanup.sh macos
    - name: Build jack2
      shell: bash
      run: |
        pushd PawPaw && source local.env macos && popd
        python ./waf configure --platform=darwin --prefix=/usr/local
        python ./waf build -j $(sysctl -n hw.logicalcpu)
        python ./waf install --destdir="$(pwd)/destdir"

  # macOS native universal build
  macos_universal:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: macos-universal-${PAWPAW_VERSION}
    - name: Set up dependencies
      run: |
        brew install cmake jq meson
    - name: Fix up Xcode
      run: |
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
        sudo xcode-select -s "/Applications/Xcode_12.3.app"
    - name: Bootstrap macOS universal
      shell: bash
      run: |
        if [ ! -d PawPaw ]; then
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${PAWPAW_VERSION}
        fi
        ./PawPaw/bootstrap-jack2.sh macos-universal && ./PawPaw/.cleanup.sh macos-universal
    - name: Build jack2
      shell: bash
      run: |
        pushd PawPaw && source local.env macos-universal && popd
        python ./waf configure --platform=darwin --prefix=/usr/local
        python ./waf build -j $(sysctl -n hw.logicalcpu)
        python ./waf install --destdir="$(pwd)/destdir"

  # linux with win32 cross-compilation
  win32:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/debs
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: win32-${PAWPAW_VERSION}
    - name: Restore debian packages cache
      run: |
        if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
          sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
        fi
    - name: Set up dependencies
      run: |
        wget -qO- https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
        sudo dpkg --add-architecture i386
        sudo apt-add-repository -y 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
        sudo apt-get install -y autopoint build-essential curl cmake jq llvm mingw-w64 qttools5-dev-tools winehq-stable xvfb \
          binutils-mingw-w64-i686 g++-mingw-w64-i686
    - name: Cache debian packages
      run: |
        mkdir -p ~/PawPawBuilds/debs && \
        sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
    - name: Bootstrap win32 cross-compiled
      shell: bash
      run: |
        if [ ! -d PawPaw ]; then
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${PAWPAW_VERSION}
        fi
        ./PawPaw/bootstrap-jack2.sh win32 && ./PawPaw/.cleanup.sh win32
    - name: Build jack2
      shell: bash
      run: |
        pushd PawPaw && source local.env win32 && popd
        ./waf configure --platform=win32 --prefix="$(pwd)/destdir" --static
        ./waf build -j $(nproc)
        ./waf install
    - name: Generate MSVC lib files
      shell: bash
      run: |
        llvm-dlltool -m i386 -D libjack.dll -d $(pwd)/destdir/lib/libjack.def -l $(pwd)/destdir/lib/libjack.lib
        llvm-dlltool -m i386 -D libjacknet.dll -d $(pwd)/destdir/lib/libjacknet.def -l $(pwd)/destdir/lib/libjacknet.lib
        llvm-dlltool -m i386 -D libjackserver.dll -d $(pwd)/destdir/lib/libjackserver.def -l $(pwd)/destdir/lib/libjackserver.lib

  # linux with win64 cross-compilation
  win64:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/debs
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: win64-${PAWPAW_VERSION}
    - name: Restore debian packages cache
      run: |
        if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
          sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
        fi
    - name: Set up dependencies
      run: |
        wget -qO- https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
        sudo dpkg --add-architecture i386
        sudo apt-add-repository -y 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
        sudo apt-get install -y autopoint build-essential curl cmake jq llvm mingw-w64 qttools5-dev-tools winehq-stable xvfb \
          binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64
    - name: Cache debian packages
      run: |
        mkdir -p ~/PawPawBuilds/debs && \
        sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
    - name: Bootstrap win64 cross-compiled
      shell: bash
      run: |
        if [ ! -d PawPaw ]; then
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${PAWPAW_VERSION}
        fi
        ./PawPaw/bootstrap-jack2.sh win64 && ./PawPaw/.cleanup.sh win64
    - name: Build jack2
      shell: bash
      run: |
        pushd PawPaw && source local.env win32 && popd
        ./waf configure --platform=win32 --prefix="$(pwd)/destdir" --static
        ./waf build -j $(nproc)
        ./waf install
    - name: Generate MSVC lib files
      shell: bash
      run: |
        llvm-dlltool -m i386 -D libjack.dll -d $(pwd)/destdir/lib32/libjack.def -l $(pwd)/destdir/lib32/libjack.lib
        llvm-dlltool -m i386:x86-64 -D libjack64.dll -d $(pwd)/destdir/lib/libjack64.def -l $(pwd)/destdir/lib/libjack64.lib
        llvm-dlltool -m i386:x86-64 -D libjacknet64.dll -d $(pwd)/destdir/lib/libjacknet64.def -l $(pwd)/destdir/lib/libjacknet64.lib
        llvm-dlltool -m i386:x86-64 -D libjackserver64.dll -d $(pwd)/destdir/lib/libjackserver64.def -l $(pwd)/destdir/lib/libjackserver64.lib
